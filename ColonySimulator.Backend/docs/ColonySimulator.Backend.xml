<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ColonySimulator.Backend</name>
    </assembly>
    <members>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler">
            <summary>
            Profession handler, it resolves and modifies data related to simuation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.#ctor(ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IFarmerHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IApothecaryHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IBlackSmithHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IMedicHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.ITimberHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.ITraderHandler,ColonySimulator.Backend.Persistence.ColonySimulatorContext)">
            <summary>
            Constructor with DI parameters 
            </summary>
            <param name="farmerHandler">farmer handler</param>
            <param name="apothecaryHandler">apothecary handler</param>
            <param name="blackSmithHandler">blacksmith handler</param>
            <param name="medicHandler">medic handler</param>
            <param name="timberHandler">timber handler</param>
            <param name="traderHandler">trader handler</param>
            <param name="dbContext">Db context class with db objects</param>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ConsequenceOverview`2">
            <summary>
            generic class to map data overview 
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TR"></typeparam>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor">
            <summary>
            empty constructor
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor(`0,`1)">
            <summary>
            Constructor with generic parameters
            </summary>
            <param name="parameters">threat overview</param>
            <param name="professionsOverview">Professions overview class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor(`0,`1,System.Int32,System.Int32,ColonySimulator.Backend.Helpers.ResourceOverview)">
            <summary>
            Main constructor with all needed parameters to show
            </summary>
            <param name="parameters">Threat overview class</param>
            <param name="professionsOverview">Professions overview class</param>
            <param name="populationCount">Actual population count</param>
            <param name="peopleLost">Number of people lost</param>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.Parameters">
            <summary>
            Generic parameter to pass
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.PopulationCount">
            <summary>
            Population number
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.PopulationLost">
            <summary>
            Number of people lost
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.ProfessionsOverview">
            <summary>
            second generic parameter to pass
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.PopCounter">
            <summary>
            Population counter class
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.PopCounter.PopulationCount">
            <summary>
            Actual number of people 
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.PopCounter.PeopleLost">
            <summary>
            People lost during simulation
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ProfessionsOverview">
            <summary>
            Overview class for professions
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Apothecaries">
            <summary>
            Apothecaries list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.BlackSmiths">
            <summary>
            BlackSmith list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Farmers">
            <summary>
            Farmers list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Medics">
            <summary>
            Medics list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Timbers">
            <summary>
            Timbers list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Traders">
            <summary>
            Traders list
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Tests.TestDataHelper">
            <summary>
            Class with sample data to match in tests
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataHelper.TestSeederData">
            <summary>
            Method to test sample data from db
            </summary>
            <returns>List of professions</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder">
            <summary>
            Seeder to seed test data
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.Context">
            <summary>
            Db context property
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.#ctor(ColonySimulator.Backend.Persistence.ColonySimulatorContext)">
            <summary>
            Constructor in it
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.SeedTestData">
            <summary>
            Method to seed test data in db
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ThreatsOverview">
            <summary>
            Overview class for threats
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ThreatsOverview.ThreatsDefeated">
            <summary>
            Defeated threats list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ThreatsOverview.ThreatsYieldedTo">
            <summary>
            Not defeated threat list 
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Year">
            <summary>
            Year counter class
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.Year.YearOfSim">
            <summary>
            Current year of simulation
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.init">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.AddIsSick">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.CosmeticChanges">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.AddProfessionsTable">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Persistence.ColonySimulatorContext">
            <summary>
            Db context to operate with database linked to application
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Persistence.ColonySimulatorContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{ColonySimulator.Backend.Persistence.ColonySimulatorContext})">
            <summary>
            Constructor with options
            </summary>
            <param name="options">dbContext options</param>
        </member>
        <member name="T:ColonySimulator.Backend.Seeders.DataSeeder">
            <summary>
            Data seeder class, with combined other seeders
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.#ctor(ColonySimulator.Backend.Seeders.ProfessionSeeder,ColonySimulator.Backend.Seeders.ResourceSeeder,ColonySimulator.Backend.Seeders.ThreatSeeder,Serilog.ILogger)">
            <summary>
            Constructor for it
            </summary>
            <param name="professionSeeder">Profession seeder class</param>
            <param name="resourceSeeder">Resource seeder class</param>
            <param name="threatSeeder">Threat seeder class</param>
            <param name="logger">logger class to log data</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.GetSeedingDataAsync(System.Threading.CancellationToken)">
            <summary>
            Gets seeding data
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.SeedData(System.Threading.CancellationToken)">
            <summary>
            Seeds data
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Seeders.ProfessionSeeder">
            <summary>
            Data seeder for profession objects
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.#ctor(ColonySimulator.Backend.Persistence.ColonySimulatorContext,Serilog.ILogger,ColonySimulator.Backend.Helpers.PopCounter)">
            <summary>
            Constructor for it with DI parameters
            </summary>
            <param name="dbContext">Db context class</param>
            <param name="logger">Logger to log data</param>
            <param name="counter">Population counter class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedApothecary(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seeds apothecary object
            </summary>
            <param name="apothecaryCount">Number of Apothecaries</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedBlacksmith(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed blacksmiths
            </summary>
            <param name="blacksmithCount">number of blacksmiths to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedFarmer(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Farmer seeder
            </summary>
            <param name="farmerCount">number of farmers to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedMedic(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed medics
            </summary>
            <param name="medicCount">Number of medics</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedTimbers(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed timbers
            </summary>
            <param name="timbersCount">Number of seeders to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedTraders(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed traders
            </summary>
            <param name="traderCount">Number of traders to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.DataDisplayService">
            <summary>
            Class to display data and serialize it
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.DataDisplayService.#ctor(ColonySimulator.Backend.Helpers.PopCounter)">
            <summary>
            constructor for it with DI parameters
            </summary>
            <param name="counter">Population counter class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.DataDisplayService.SerializeAndDisplayData``2(``0,``1,ColonySimulator.Backend.Helpers.ResourceOverview)">
            <summary>
            Serialize and display objects in a pleasant way
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TR"></typeparam>
            <returns>Serialized string based on passed content</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Services.StartSimulationService">
            <summary>
            Class to fire up simulation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartSimulationService.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ColonySimulator.Backend.Helpers.PopCounter,ColonySimulator.Backend.Helpers.Year,ColonySimulator.Backend.Services.DataDisplayService)">
            <summary>
            Constructor for this service
            </summary>
            <param name="serviceScopeFactory">Service scope factory</param>
            <param name="counter">Population counter class</param>
            <param name="year">current year in simulation</param>
            <param name="displayService">Data display service</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartSimulationService.RunAsync(System.Threading.CancellationToken)">
            <summary>
            Start simulation based on specified parameters and don't stop till everyone is dead
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.StartupService">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartupService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            application startup method
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartupService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            application shutdown
            </summary>
            <param name="cancellationToken"></param>
        </member>
    </members>
</doc>
