<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ColonySimulator.Backend</name>
    </assembly>
    <members>
        <member name="T:ColonySimulator.Backend.Effects.Effect">
            <summary>
            General effects done to entities
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.Effect.Name">
            <summary>
            Name of effect
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.Effect.Damage">
            <summary>
            Damage done to single entity
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Effects.EmptyEffect">
            <summary>
            Empty effect
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Effects.FightingThreatEffect">
            <summary>
            Threat effect from combat type threat
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.FightingThreatEffect.#ctor">
            <summary>
            Empty contstructor
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.FightingThreatEffect.#ctor(System.String,System.Int32,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Constructor with parameters
            </summary>
            <param name="name">Name of effect</param>
            <param name="damage">damage done to entities</param>
            <param name="resourcesStolen">resources lost</param>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.FightingThreatEffect.ResourcesStolen">
            <summary>
            Resources stolen from colony
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Effects.NaturalEffect">
            <summary>
            Threat effect from natural effect
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.NaturalEffect.#ctor">
            <summary>
            empty constructor
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.NaturalEffect.#ctor(System.String,System.Int32,System.Boolean,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Constructor with parameters to pass
            </summary>
            <param name="name">Name of effect</param>
            <param name="damage">damage done to entity</param>
            <param name="isHungry">parameter to set in entity</param>
            <param name="resourcesLost">resources lost due to threat</param>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.NaturalEffect.IsHungry">
            <summary>
            Bool setting entity hunger status to true
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.NaturalEffect.ResourcesLost">
            <summary>
            Resources lost due to threat
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Effects.PlagueEffect">
            <summary>
            Effects caused by plagues 
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.PlagueEffect.#ctor">
            <summary>
            Empty constructor
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Effects.PlagueEffect.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Setting constructor
            </summary>
            <param name="name">Name of threat</param>
            <param name="damage">Amount of entity damage done</param>
            <param name="medicineCount">Required count of medicine</param>
            <param name="isSick">status change of entity</param>
            <param name="requiredMedicLevel"> Required combined level of medics</param>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.PlagueEffect.IsSick">
            <summary>
            bool changing IsSick status of entity
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.PlagueEffect.MedicineCount">
            <summary>
            Required medicine cout
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Effects.PlagueEffect.RequiredMedicLevel">
            <summary>
            Required level of medic to treat it
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.Interfaces.IPersonActivity">
            <summary>
            Main person activity interface
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.Interfaces.IPersonActivity.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Experience threat
            </summary>
            <param name="effect">Experienced threat effect</param>
            <param name="profession">Profession of entity</param>
            <param name="resources">resources to modify</param>
            <returns></returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler">
            <summary>
            Handles threats
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler.CalculateAffection(ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,ColonySimulator.Backend.Persistence.Models.Threats.Threat)">
            <summary>
            Calculates entity's affection of threat
            </summary>
            <param name="profession">entities profession</param>
            <param name="threat">Threat on which calculation is made</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler.GenerateEffects(ColonySimulator.Backend.Persistence.Models.Threats.Threat,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Generates effect of threat based on calculated affection
            </summary>
            <param name="threat">Passed threat</param>
            <param name="resources"></param>
            <returns>Generated effect</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler.GenerateRandomThreat(System.Threading.CancellationToken)">
            <summary>
            Generates random threat
            </summary>
            <returns>Randomly generated threat</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler.CalculateUsedResources(System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource},ColonySimulator.Backend.Persistence.Models.Threats.Threat)">
            <summary>
            Calculates affected resources
            </summary>
            <param name="resources">List of resources to pass</param>
            <param name="threat">threat affecting</param>
            <returns>list of affected resources</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IProfessionHandler">
            <summary>
            Handles professions
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.ApothecaryHandler">
            <summary>
            Handles apothecary activity
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ApothecaryHandler.CreateMedicine(ColonySimulator.Backend.Persistence.Models.Resources.Herbs,ColonySimulator.Backend.Persistence.Models.Resources.Medicine,System.Int32)">
            <summary>
            Creates medicine
            </summary>
            <param name="herbs">Modifies herbs entity</param>
            <param name="medicine">Modifies medicine entity</param>
            <param name="apoLevel">level of apothecary</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ApothecaryHandler.CollectingHerbs(ColonySimulator.Backend.Persistence.Models.Resources.Herbs,System.Int32)">
            <summary>
            Generates Herbs
            </summary>
            <param name="herbs">herbs to modify</param>
            <param name="apoLevel">level of apothecary</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ApothecaryHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Experience threat as entity
            </summary>
            <param name="effect">effect of threat</param>
            <param name="proffesion">profession of entity</param>
            <param name="resources">resources to modify</param>
            <returns></returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.BlackSmithHandler">
            <summary>
            Handler for blacksmith
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.BlackSmithHandler.CreateWeapon(ColonySimulator.Backend.Persistence.Models.Resources.Weaponry,ColonySimulator.Backend.Persistence.Models.Resources.Wood,System.Int32)">
            <summary>
            generate new weapon
            </summary>
            <param name="weapon">Weapon</param>
            <param name="wood">Wood</param>
            <param name="blackLevel">blacksmith level</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.BlackSmithHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Experiences threat
            </summary>
            <param name="effect">effect of threat</param>
            <param name="proffesion">profession of entity</param>
            <param name="resources">resources lost</param>
            <returns></returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.FarmerHandler">
            <summary>
            Handle farmer
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.FarmerHandler.Farm(ColonySimulator.Backend.Persistence.Models.Resources.Crops,ColonySimulator.Backend.Persistence.Models.Resources.Herbs,System.Int32)">
            <summary>
            Generate new resources
            </summary>
            <param name="crops">crops</param>
            <param name="herbs">herbs</param>
            <param name="farmLevel">level of entity</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.FarmerHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Experience threat
            </summary>
            <param name="effect">effect of threat</param>
            <param name="proffesion">profession</param>
            <param name="resources">resources affected</param>
            <returns></returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.MedicHandler">
            <summary>
            Handler for medic
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.MedicHandler.Heal(ColonySimulator.Backend.Persistence.Models.Resources.Medicine,ColonySimulator.Backend.Persistence.Models.Professions.Person,System.Int32)">
            <summary>
            heal given person
            </summary>
            <param name="medicine">medicine entity used</param>
            <param name="person">person affected</param>
            <param name="medLevel">level of entity</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.MedicHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Experienced threat by entity
            </summary>
            <param name="effect">effect of threat</param>
            <param name="proffesion">entity's profession</param>
            <param name="resources">resources affected</param>
            <returns>Completed task</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler">
            <summary>
            Profession handler, it resolves and modifies data related to simulation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.#ctor(ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IFarmerHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IApothecaryHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IBlackSmithHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.IMedicHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.ITimberHandler,ColonySimulator.Backend.Handlers.Interfaces.ProfessionsInterfaces.ITraderHandler,ColonySimulator.Backend.Persistence.ColonySimulatorContext,ColonySimulator.Backend.Handlers.Interfaces.IThreatHandler,ColonySimulator.Backend.Helpers.Interfaces.IThreatProvider)">
            <summary>
            Constructor with DI parameters 
            </summary>
            <param name="farmerHandler">farmer handler</param>
            <param name="apothecaryHandler">apothecary handler</param>
            <param name="blackSmithHandler">blacksmith handler</param>
            <param name="medicHandler">medic handler</param>
            <param name="timberHandler">timber handler</param>
            <param name="traderHandler">trader handler</param>
            <param name="dbContext">Db context class with db objects</param>
            <param name="threatHandler">Threat handler interface</param>
            <param name="threatProvider">Threat provider class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleFarm">
            <summary>
            Handles farmers
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleApothecary">
            <summary>
            Handles apothecaries
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleTimber">
            <summary>
            Handles timbers
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleBlackSmith">
            <summary>
            handles blacksmiths
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleMedic">
            <summary>
            Handles medics
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.ProfessionHandler.HandleTrader">
            <summary>
            Handles trading
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.TimberHandler">
            <summary>
            Handler for timbers
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.TimberHandler.CreateWood(ColonySimulator.Backend.Persistence.Models.Resources.Wood,System.Int32)">
            <summary>
            Creates wood
            </summary>
            <param name="wood">entity to modify</param>
            <param name="timLevel">level of timber</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.TimberHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Threat experience
            </summary>
            <param name="effect">effect of threat</param>
            <param name="proffesion">Profession of entity</param>
            <param name="resources">List of affected resources</param>
            <returns>Completed task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ProfessionHandlers.TraderHandler">
            <summary>
            Trader handler
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.TraderHandler.Trade(ColonySimulator.Backend.Persistence.Models.Resources.Crops,ColonySimulator.Backend.Persistence.Models.Resources.Wood,ColonySimulator.Backend.Persistence.Models.Resources.Medicine,ColonySimulator.Backend.Persistence.Models.Resources.Herbs,ColonySimulator.Backend.Persistence.Models.Resources.Weaponry)">
            <summary>
            Generate new resources by trader
            </summary>
            <param name="crops">Crops</param>
            <param name="wood">Wood</param>
            <param name="medicine">Medicine</param>
            <param name="herbs">Herbs</param>
            <param name="weaponry">Weaponry</param>
            <returns>Completed task</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ProfessionHandlers.TraderHandler.ExperienceThreat(ColonySimulator.Backend.Effects.Effect,ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Threat experience for trader
            </summary>
            <param name="effect">threat effect</param>
            <param name="proffesion">profession of entity</param>
            <param name="resources">resources affected</param>
            <returns>completed task</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Handlers.ThreatHandler">
            <summary>
            Implementation of IThreatHandler
            </summary>
        </member>
        <member name="F:ColonySimulator.Backend.Handlers.ThreatHandler._damage">
            <summary>
            Damage for an entity
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ThreatHandler.#ctor(ColonySimulator.Backend.Persistence.ColonySimulatorContext)">
            <summary>
            Constructor for class with DI parameters
            </summary>
            <param name="dbContext">Db context</param>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ThreatHandler.CalculateAffection(ColonySimulator.Backend.Persistence.Models.Professions.Proffesion,ColonySimulator.Backend.Persistence.Models.Threats.Threat)">
            <summary>
            Calculates affection by threat of entity
            </summary>
            <param name="profession">Profession of entity</param>
            <param name="threat">threat passed on as parameter</param>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ThreatHandler.CalculateUsedResources(System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource},ColonySimulator.Backend.Persistence.Models.Threats.Threat)">
            <summary>
            Calculate affected resources
            </summary>
            <param name="resources">resources to pass</param>
            <param name="threat">threat passed</param>
            <returns>List of resources affected by threat</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ThreatHandler.GenerateEffects(ColonySimulator.Backend.Persistence.Models.Threats.Threat,System.Collections.Generic.List{ColonySimulator.Backend.Persistence.Models.Resources.Resource})">
            <summary>
            Generates effect based on threat for entity
            </summary>
            <param name="threat">Current threat</param>
            <param name="resources">List of resources to pass</param>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns>Generated effect</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Handlers.ThreatHandler.GenerateRandomThreat(System.Threading.CancellationToken)">
            <summary>
            Generates random threat
            </summary>
            <param name="ct"></param>
            <returns>generated threat</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ConsequenceOverview`2">
            <summary>
            generic class to map data overview 
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TR"></typeparam>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor">
            <summary>
            empty constructor
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor(`0,`1)">
            <summary>
            Constructor with generic parameters
            </summary>
            <param name="parameters">threat overview</param>
            <param name="professionsOverview">Professions overview class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.#ctor(`0,`1,System.Int32,System.Int32,ColonySimulator.Backend.Helpers.ResourceOverview)">
            <summary>
            Main constructor with all needed parameters to show
            </summary>
            <param name="parameters">Threat overview class</param>
            <param name="professionsOverview">Professions overview class</param>
            <param name="populationCount">Actual population count</param>
            <param name="peopleLost">Number of people lost</param>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.Parameters">
            <summary>
            Generic parameter to pass
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.PopulationCount">
            <summary>
            Population number
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.PopulationLost">
            <summary>
            Number of people lost
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ConsequenceOverview`2.ProfessionsOverview">
            <summary>
            second generic parameter to pass
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.InputStorer">
            <summary>
            Stores input data for simulation
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.InputStorer.Duration">
            <summary>
            Duration of simulation
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.InputStorer.Data">
            <summary>
            Simulation data
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.PopCounter">
            <summary>
            Population counter class
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.PopCounter.PopulationCount">
            <summary>
            Actual number of people 
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.PopCounter.PeopleLost">
            <summary>
            People lost during simulation
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ProfessionsOverview">
            <summary>
            Overview class for professions
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Apothecaries">
            <summary>
            Apothecaries list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.BlackSmiths">
            <summary>
            BlackSmith list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Farmers">
            <summary>
            Farmers list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Medics">
            <summary>
            Medics list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Timbers">
            <summary>
            Timbers list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ProfessionsOverview.Traders">
            <summary>
            Traders list
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.SimulationData">
            <summary>
            Simulation data
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.ApothecaryCount">
            <summary>
            Number of apothecaries
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.BlackSmithCount">
            <summary>
            Number of blacksmiths
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.FarmerCount">
            <summary>
            Number of farmers
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.TimberCount">
            <summary>
            Number of timbers
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.MedicCount">
            <summary>
            Number of medics
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.TraderCount">
            <summary>
            Number of traders
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.CropsCount">
            <summary>
            Number of crops
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.HerbsCount">
            <summary>
            Number of herbs
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.MedicineCount">
            <summary>
            Number of medicine
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.WeaponryCount">
            <summary>
            Number of weaponry
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.SimulationData.WoodCount">
            <summary>
            Number of wood
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Tests.TestDataHelper">
            <summary>
            Class with sample data to match in tests
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataHelper.TestSeederData">
            <summary>
            Method to test sample data from db
            </summary>
            <returns>List of professions</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder">
            <summary>
            Seeder to seed test data
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.Context">
            <summary>
            Db context property
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.#ctor(ColonySimulator.Backend.Persistence.ColonySimulatorContext)">
            <summary>
            Constructor in it
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Helpers.Tests.TestDataSeeder.SeedTestData">
            <summary>
            Method to seed test data in db
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ThreatProvider">
            <summary>
            Global threat storing class
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ThreatProvider.ThreatToExperience">
            <summary>
            Threat to experience for a class
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.ThreatsOverview">
            <summary>
            Overview class for threats
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ThreatsOverview.ThreatsDefeated">
            <summary>
            Defeated threats list
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.ThreatsOverview.ThreatsYieldedTo">
            <summary>
            Not defeated threat list 
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Helpers.Year">
            <summary>
            Year counter class
            </summary>
        </member>
        <member name="P:ColonySimulator.Backend.Helpers.Year.YearOfSim">
            <summary>
            Current year of simulation
            </summary>
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.AddIsHungry">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsHungry.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsHungry.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsHungry.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.AddIsSick">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddIsSick.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.AddProfessionsTable">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.AddProfessionsTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.CosmeticChanges">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.CosmeticChanges.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Migrations.init">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ColonySimulator.Backend.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ColonySimulator.Backend.Persistence.ColonySimulatorContext">
            <summary>
            Db context to operate with database linked to application
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Persistence.ColonySimulatorContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{ColonySimulator.Backend.Persistence.ColonySimulatorContext})">
            <summary>
            Constructor with options
            </summary>
            <param name="options">dbContext options</param>
        </member>
        <member name="T:ColonySimulator.Backend.Program">
            <summary>
            Main entry point of simulation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Program.Main(System.String[])">
            <summary>
            Main entry point of program
            </summary>
            <param name="args">CLI arguments</param>
        </member>
        <member name="T:ColonySimulator.Backend.Seeders.DataSeeder">
            <summary>
            Data seeder class, with combined other seeders
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.#ctor(ColonySimulator.Backend.Seeders.ProfessionSeeder,ColonySimulator.Backend.Seeders.ResourceSeeder,ColonySimulator.Backend.Seeders.ThreatSeeder,Serilog.ILogger,ColonySimulator.Backend.Helpers.PopCounter,ColonySimulator.Backend.Helpers.Year)">
            <summary>
            Constructor for it
            </summary>
            <param name="professionSeeder">Profession seeder class</param>
            <param name="resourceSeeder">Resource seeder class</param>
            <param name="threatSeeder">Threat seeder class</param>
            <param name="logger">logger class to log data</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.GetSeedingDataAsync(System.Threading.CancellationToken)">
            <summary>
            Gets seeding data
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.LoadDataFromFileAsync(System.Threading.CancellationToken)">
            <summary>
            Loads data from file
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.SeedRandomData(System.Threading.CancellationToken)">
            <summary>
            Seeds data with random amounts of data
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Completed task</returns>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.DataSeeder.SeedData(System.Threading.CancellationToken)">
            <summary>
            Seeds data
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Seeders.ProfessionSeeder">
            <summary>
            Data seeder for profession objects
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.#ctor(ColonySimulator.Backend.Persistence.ColonySimulatorContext,Serilog.ILogger,ColonySimulator.Backend.Helpers.PopCounter)">
            <summary>
            Constructor for it with DI parameters
            </summary>
            <param name="dbContext">Db context class</param>
            <param name="logger">Logger to log data</param>
            <param name="counter">Population counter class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedApothecary(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seeds apothecary object
            </summary>
            <param name="apothecaryCount">Number of Apothecaries</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedBlacksmith(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed blacksmiths
            </summary>
            <param name="blacksmithCount">number of blacksmiths to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedFarmer(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Farmer seeder
            </summary>
            <param name="farmerCount">number of farmers to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedMedic(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed medics
            </summary>
            <param name="medicCount">Number of medics</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedTimbers(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed timbers
            </summary>
            <param name="timbersCount">Number of seeders to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Seeders.ProfessionSeeder.SeedTraders(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Seed traders
            </summary>
            <param name="traderCount">Number of traders to seed</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.DataDisplayService">
            <summary>
            Class to display data and serialize it
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.DataDisplayService.#ctor(ColonySimulator.Backend.Helpers.PopCounter)">
            <summary>
            constructor for it with DI parameters
            </summary>
            <param name="counter">Population counter class</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.DataDisplayService.SerializeAndDisplayData``2(``0,``1,ColonySimulator.Backend.Helpers.ResourceOverview)">
            <summary>
            Serialize and display objects in a pleasant way
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TR"></typeparam>
            <returns>Serialized string based on passed content</returns>
        </member>
        <member name="T:ColonySimulator.Backend.Services.EntityManagementService">
            <summary>
            Manages entities in simulation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.EntityManagementService.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ColonySimulator.Backend.Helpers.PopCounter)">
            <summary>
            Constructor for service
            </summary>
            <param name="serviceScope">Service scope</param>
            <param name="counter">Population counter</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.EntityManagementService.GenerateNewEntity(System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="summaricCount">Summaric count of entities</param>
            <param name="ct"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.EntityManagementService.CleanupDeadEntities(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="ct"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.EntityManagementService.CheckSickStatus(System.Threading.CancellationToken)">
            <summary>
            Handle sick status
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.EntityManagementService.CheckHungerStatus(System.Threading.CancellationToken)">
            <summary>
            Handle hunger status
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.Interfaces.IEntityManagementService">
            <summary>
            Manages entity's quantity
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.Interfaces.IEntityManagementService.GenerateNewEntity(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Generates new entity
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.Interfaces.IEntityManagementService.CleanupDeadEntities(System.Threading.CancellationToken)">
            <summary>
            Cleans up dead entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:ColonySimulator.Backend.Services.Interfaces.IEntityManagementService.CheckSickStatus(System.Threading.CancellationToken)">
            <summary>
            Handle health of entities
            </summary>
            <param name="ct"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.Interfaces.IEntityManagementService.CheckHungerStatus(System.Threading.CancellationToken)">
            <summary>
            Handle Hunger of entities
            </summary>
            <param name="ct"></param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.StartSimulationService">
            <summary>
            Class to fire up simulation
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartSimulationService.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ColonySimulator.Backend.Helpers.PopCounter,ColonySimulator.Backend.Helpers.Year,ColonySimulator.Backend.Services.Interfaces.IEntityManagementService,ColonySimulator.Backend.Helpers.Interfaces.IThreatProvider)">
            <summary>
            Constructor for this service
            </summary>
            <param name="serviceScopeFactory">Service scope factory</param>
            <param name="counter">Population counter class</param>
            <param name="year">current year in simulation</param>
            <param name="entityManagementService">Entity lifecycle service</param>
            <param name="threatProvider">threat to provide</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartSimulationService.RunAsync(System.Threading.CancellationToken)">
            <summary>
            Start simulation based on specified parameters and don't stop till everyone is dead
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartSimulationService.RunAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Start simulation based on specified parameters and don't stop till everyone is dead
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:ColonySimulator.Backend.Services.StartupService">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartupService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            application startup method
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:ColonySimulator.Backend.Services.StartupService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            application shutdown
            </summary>
            <param name="cancellationToken"></param>
        </member>
    </members>
</doc>
